# CPack comes after install rules
#include(package_definitions.cmake)

message("PROCESSING x86_64")
execute_process(
	COMMAND bash -c "awk -F= '/^ID_LIKE=/{print $2}' /etc/os-release | cut -d ' ' -f 1 | tr -d '\n' | tr -d '\"'" 
    OUTPUT_VARIABLE ID_LIKE
)

if("${ID_LIKE}" STREQUAL "rhel")
	execute_process(
		COMMAND bash -c "awk -F= '/^PLATFORM_ID=/{print $2}' /etc/os-release | cut -d ':' -f 2 | tr -d '\n' | tr -d '\"' " 
    	OUTPUT_VARIABLE PLATFORM_ID
	)

	list(APPEND 
		PACKAGES
		";RPM"
	)
	set(WRITE_RPM ON)
endif()
message("${ID_LIKE} ${PLATFORM_ID}")

if("${ID_LIKE}" STREQUAL "debian")
	list(APPEND 
		PACKAGES
		";DEB"
	)
	set(WRITE_DEB ON)
endif()

set(CPACK_DEBIAN_PACKAGE_GENERATE_SHLIBS OFF)

set(CPACK_GENERATOR ${PACKAGES})
#set(CPACK_PACKAGING_INSTALL_PREFIX "/")
set(CPACK_PACKAGE_DIRECTORY ${CMAKE_BINARY_DIR}/packages)
set(PACKAGE_VERSION "1.0.0")
set(PACKAGE_WC_REVISION "1")

set(CPACK_PACKAGE_NAME ${PROJECT_NAME})
project(${PROJECT_NAME} VERSION ${PACKAGE_VERSION})

set(CPACK_PACKAGE_VERSION_MAJOR ${PROJECT_VERSION_MAJOR})
set(CPACK_PACKAGE_VERSION_MINOR ${PROJECT_VERSION_MINOR})
set(CPACK_PACKAGE_VERSION_PATCH ${PROJECT_VERSION_PATCH})
set(CPACK_PACKAGE_VERSION ${PROJECT_VERSION})
set(CPACK_PACKAGE_VENDOR "D-TA Systems Inc.")
set(CPACK_PACKAGE_HOMEPAGE_URL "https://www.d-ta.com")
set(CPACK_PACKAGE_DESCRIPTION ${PROJECT_DESCRIPTION})
set(CPACK_PACKAGE_RELEASE ${PACKAGE_WC_REVISION})
set(CPACK_PACKAGE_CONTACT "support@d-ta.com")

## TAR.gz Name
set(CPACK_PACKAGE_FILE_NAME ${PROJECT_NAME})
set(CPACK_PACKAGE_FILE_NAME ${CPACK_PACKAGE_FILE_NAME}-${CPACK_PACKAGE_VERSION})
set(CPACK_PACKAGE_FILE_NAME ${CPACK_PACKAGE_FILE_NAME}-${CPACK_PACKAGE_RELEASE})
set(CPACK_PACKAGE_FILE_NAME ${CPACK_PACKAGE_FILE_NAME}.${PLATFORM_ID})
set(CPACK_PACKAGE_FILE_NAME ${CPACK_PACKAGE_FILE_NAME}.${CMAKE_SYSTEM_PROCESSOR})
set(CPACK_PACKAGE_FILE_NAME ${CPACK_PACKAGE_FILE_NAME}.gcc${CMAKE_C_COMPILER_VERSION})
file(WRITE ${CMAKE_BINARY_DIR}/packages/tarfilename "${CPACK_PACKAGE_FILE_NAME}.tar.gz")

##RPM
if(WRITE_RPM)
	set(CPACK_RPM_PACKAGE_RELEASE ${PACKAGE_WC_REVISION})
	set(CPACK_RPM_PACKAGE_RELEASE_DIST "${PLATFORM_ID}")
	set(CPACK_RPM_PACKAGE_AUTOREQ " no")
	set(CPACK_RPM_FILE_NAME ${CPACK_PACKAGE_NAME}-${CPACK_PACKAGE_VERSION}-${CPACK_PACKAGE_RELEASE}.${CPACK_RPM_PACKAGE_RELEASE_DIST}.${CMAKE_SYSTEM_PROCESSOR}.gcc${CMAKE_C_COMPILER_VERSION}.rpm)
	file(WRITE ${CMAKE_BINARY_DIR}/packages/rpmfilename "${CPACK_RPM_FILE_NAME}")

	set(DTA_RPM_EXCLUDE_DIRS 
		"/usr"
		"/usr/include"
		"/usr/lib64"
		"/usr/lib64/cmake"
	)
	list(APPEND CPACK_RPM_EXCLUDE_FROM_AUTO_FILELIST_ADDITION ${DTA_RPM_EXCLUDE_DIRS})
endif()

##DEBIAN
if(WRITE_DEB)
	set(CPACK_DEBIAN_PACKAGE_SHLIBDEPS YES)
	set(CPACK_DEBIAN_FILE_NAME ${PROJECT_NAME})
	set(CPACK_DEBIAN_FILE_NAME ${CPACK_DEBIAN_FILE_NAME}-${CPACK_PACKAGE_VERSION})
	set(CPACK_DEBIAN_FILE_NAME ${CPACK_DEBIAN_FILE_NAME}-${CPACK_PACKAGE_RELEASE})
	set(CPACK_DEBIAN_FILE_NAME ${CPACK_DEBIAN_FILE_NAME}.deb)
	file(WRITE ${CMAKE_BINARY_DIR}/packages/debfilename "${CPACK_DEBIAN_FILE_NAME}")
endif()

include(CPack)
